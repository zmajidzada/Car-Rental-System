//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentalWebSite.VanServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VanModel", Namespace="http://schemas.datacontract.org/2004/07/VanRentalService")]
    [System.SerializableAttribute()]
    public partial class VanModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DailyRentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsavailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegPlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VanIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DailyRent {
            get {
                return this.DailyRentField;
            }
            set {
                if ((this.DailyRentField.Equals(value) != true)) {
                    this.DailyRentField = value;
                    this.RaisePropertyChanged("DailyRent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Isavailable {
            get {
                return this.IsavailableField;
            }
            set {
                if ((this.IsavailableField.Equals(value) != true)) {
                    this.IsavailableField = value;
                    this.RaisePropertyChanged("Isavailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Make {
            get {
                return this.MakeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeField, value) != true)) {
                    this.MakeField = value;
                    this.RaisePropertyChanged("Make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegPlate {
            get {
                return this.RegPlateField;
            }
            set {
                if ((object.ReferenceEquals(this.RegPlateField, value) != true)) {
                    this.RegPlateField = value;
                    this.RaisePropertyChanged("RegPlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VanId {
            get {
                return this.VanIdField;
            }
            set {
                if ((this.VanIdField.Equals(value) != true)) {
                    this.VanIdField = value;
                    this.RaisePropertyChanged("VanId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VanServiceReference.IVanService")]
    public interface IVanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVanService/InsertVan", ReplyAction="http://tempuri.org/IVanService/InsertVanResponse")]
        string InsertVan(CarRentalWebSite.VanServiceReference.VanModel vanModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVanService/InsertVan", ReplyAction="http://tempuri.org/IVanService/InsertVanResponse")]
        System.Threading.Tasks.Task<string> InsertVanAsync(CarRentalWebSite.VanServiceReference.VanModel vanModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVanService/AvailableVan", ReplyAction="http://tempuri.org/IVanService/AvailableVanResponse")]
        CarRentalWebSite.VanServiceReference.VanModel[] AvailableVan();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVanService/AvailableVan", ReplyAction="http://tempuri.org/IVanService/AvailableVanResponse")]
        System.Threading.Tasks.Task<CarRentalWebSite.VanServiceReference.VanModel[]> AvailableVanAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVanServiceChannel : CarRentalWebSite.VanServiceReference.IVanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VanServiceClient : System.ServiceModel.ClientBase<CarRentalWebSite.VanServiceReference.IVanService>, CarRentalWebSite.VanServiceReference.IVanService {
        
        public VanServiceClient() {
        }
        
        public VanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertVan(CarRentalWebSite.VanServiceReference.VanModel vanModel) {
            return base.Channel.InsertVan(vanModel);
        }
        
        public System.Threading.Tasks.Task<string> InsertVanAsync(CarRentalWebSite.VanServiceReference.VanModel vanModel) {
            return base.Channel.InsertVanAsync(vanModel);
        }
        
        public CarRentalWebSite.VanServiceReference.VanModel[] AvailableVan() {
            return base.Channel.AvailableVan();
        }
        
        public System.Threading.Tasks.Task<CarRentalWebSite.VanServiceReference.VanModel[]> AvailableVanAsync() {
            return base.Channel.AvailableVanAsync();
        }
    }
}
