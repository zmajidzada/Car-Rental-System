//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentalWebSite.CarServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarServiceReference.IVehicle")]
    public interface IVehicle {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/InsertCar", ReplyAction="http://tempuri.org/IVehicle/InsertCarResponse")]
        string InsertCar(CarRentalServices.CarModel car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/InsertCar", ReplyAction="http://tempuri.org/IVehicle/InsertCarResponse")]
        System.Threading.Tasks.Task<string> InsertCarAsync(CarRentalServices.CarModel car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/RetrieveCarDetails", ReplyAction="http://tempuri.org/IVehicle/RetrieveCarDetailsResponse")]
        CarRentalServices.CarModel RetrieveCarDetails(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/RetrieveCarDetails", ReplyAction="http://tempuri.org/IVehicle/RetrieveCarDetailsResponse")]
        System.Threading.Tasks.Task<CarRentalServices.CarModel> RetrieveCarDetailsAsync(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/UpdateCarDetails", ReplyAction="http://tempuri.org/IVehicle/UpdateCarDetailsResponse")]
        string UpdateCarDetails(int carId, CarRentalServices.CarModel car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/UpdateCarDetails", ReplyAction="http://tempuri.org/IVehicle/UpdateCarDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateCarDetailsAsync(int carId, CarRentalServices.CarModel car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/DeleteCarRecords", ReplyAction="http://tempuri.org/IVehicle/DeleteCarRecordsResponse")]
        string DeleteCarRecords(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/DeleteCarRecords", ReplyAction="http://tempuri.org/IVehicle/DeleteCarRecordsResponse")]
        System.Threading.Tasks.Task<string> DeleteCarRecordsAsync(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/AvailableCars", ReplyAction="http://tempuri.org/IVehicle/AvailableCarsResponse")]
        CarRentalServices.CarModel[] AvailableCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/AvailableCars", ReplyAction="http://tempuri.org/IVehicle/AvailableCarsResponse")]
        System.Threading.Tasks.Task<CarRentalServices.CarModel[]> AvailableCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/MakeBooking", ReplyAction="http://tempuri.org/IVehicle/MakeBookingResponse")]
        int MakeBooking(int numday, int acccountId, int carId, System.DateTime dateOut, System.DateTime dateReturn, decimal totalCost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/MakeBooking", ReplyAction="http://tempuri.org/IVehicle/MakeBookingResponse")]
        System.Threading.Tasks.Task<int> MakeBookingAsync(int numday, int acccountId, int carId, System.DateTime dateOut, System.DateTime dateReturn, decimal totalCost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/ModifyBooking", ReplyAction="http://tempuri.org/IVehicle/ModifyBookingResponse")]
        string ModifyBooking(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/ModifyBooking", ReplyAction="http://tempuri.org/IVehicle/ModifyBookingResponse")]
        System.Threading.Tasks.Task<string> ModifyBookingAsync(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/CancelBooking", ReplyAction="http://tempuri.org/IVehicle/CancelBookingResponse")]
        string CancelBooking(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/CancelBooking", ReplyAction="http://tempuri.org/IVehicle/CancelBookingResponse")]
        System.Threading.Tasks.Task<string> CancelBookingAsync(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/CheckCarAvailability", ReplyAction="http://tempuri.org/IVehicle/CheckCarAvailabilityResponse")]
        bool CheckCarAvailability(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/CheckCarAvailability", ReplyAction="http://tempuri.org/IVehicle/CheckCarAvailabilityResponse")]
        System.Threading.Tasks.Task<bool> CheckCarAvailabilityAsync(int carId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/GetTotalNumberOfCar", ReplyAction="http://tempuri.org/IVehicle/GetTotalNumberOfCarResponse")]
        int GetTotalNumberOfCar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/GetTotalNumberOfCar", ReplyAction="http://tempuri.org/IVehicle/GetTotalNumberOfCarResponse")]
        System.Threading.Tasks.Task<int> GetTotalNumberOfCarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/GetTotalNumberOfCarOnRent", ReplyAction="http://tempuri.org/IVehicle/GetTotalNumberOfCarOnRentResponse")]
        int GetTotalNumberOfCarOnRent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicle/GetTotalNumberOfCarOnRent", ReplyAction="http://tempuri.org/IVehicle/GetTotalNumberOfCarOnRentResponse")]
        System.Threading.Tasks.Task<int> GetTotalNumberOfCarOnRentAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleChannel : CarRentalWebSite.CarServiceReference.IVehicle, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleClient : System.ServiceModel.ClientBase<CarRentalWebSite.CarServiceReference.IVehicle>, CarRentalWebSite.CarServiceReference.IVehicle {
        
        public VehicleClient() {
        }
        
        public VehicleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertCar(CarRentalServices.CarModel car) {
            return base.Channel.InsertCar(car);
        }
        
        public System.Threading.Tasks.Task<string> InsertCarAsync(CarRentalServices.CarModel car) {
            return base.Channel.InsertCarAsync(car);
        }
        
        public CarRentalServices.CarModel RetrieveCarDetails(int carId) {
            return base.Channel.RetrieveCarDetails(carId);
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.CarModel> RetrieveCarDetailsAsync(int carId) {
            return base.Channel.RetrieveCarDetailsAsync(carId);
        }
        
        public string UpdateCarDetails(int carId, CarRentalServices.CarModel car) {
            return base.Channel.UpdateCarDetails(carId, car);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCarDetailsAsync(int carId, CarRentalServices.CarModel car) {
            return base.Channel.UpdateCarDetailsAsync(carId, car);
        }
        
        public string DeleteCarRecords(int carId) {
            return base.Channel.DeleteCarRecords(carId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCarRecordsAsync(int carId) {
            return base.Channel.DeleteCarRecordsAsync(carId);
        }
        
        public CarRentalServices.CarModel[] AvailableCars() {
            return base.Channel.AvailableCars();
        }
        
        public System.Threading.Tasks.Task<CarRentalServices.CarModel[]> AvailableCarsAsync() {
            return base.Channel.AvailableCarsAsync();
        }
        
        public int MakeBooking(int numday, int acccountId, int carId, System.DateTime dateOut, System.DateTime dateReturn, decimal totalCost) {
            return base.Channel.MakeBooking(numday, acccountId, carId, dateOut, dateReturn, totalCost);
        }
        
        public System.Threading.Tasks.Task<int> MakeBookingAsync(int numday, int acccountId, int carId, System.DateTime dateOut, System.DateTime dateReturn, decimal totalCost) {
            return base.Channel.MakeBookingAsync(numday, acccountId, carId, dateOut, dateReturn, totalCost);
        }
        
        public string ModifyBooking(int bookingId) {
            return base.Channel.ModifyBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task<string> ModifyBookingAsync(int bookingId) {
            return base.Channel.ModifyBookingAsync(bookingId);
        }
        
        public string CancelBooking(int bookingId) {
            return base.Channel.CancelBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task<string> CancelBookingAsync(int bookingId) {
            return base.Channel.CancelBookingAsync(bookingId);
        }
        
        public bool CheckCarAvailability(int carId) {
            return base.Channel.CheckCarAvailability(carId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCarAvailabilityAsync(int carId) {
            return base.Channel.CheckCarAvailabilityAsync(carId);
        }
        
        public int GetTotalNumberOfCar() {
            return base.Channel.GetTotalNumberOfCar();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalNumberOfCarAsync() {
            return base.Channel.GetTotalNumberOfCarAsync();
        }
        
        public int GetTotalNumberOfCarOnRent() {
            return base.Channel.GetTotalNumberOfCarOnRent();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalNumberOfCarOnRentAsync() {
            return base.Channel.GetTotalNumberOfCarOnRentAsync();
        }
    }
}
